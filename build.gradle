plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //Mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // Retry
    implementation "org.springframework.retry:spring-retry"

    // AOP
    runtimeOnly 'org.springframework.boot:spring-boot-starter-aop'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl Start
def generated = file('build/generated/querydsl')

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(generated)
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'build/generated/querydsl']
        }
    }
}

clean {
    delete generated
}
// Querydsl End
